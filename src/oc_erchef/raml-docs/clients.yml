#%RAML 0.8
---
description:
  View and add clients to the Chef server scoped to an organization.
get:
  is: [ versioned ]
  description:
    List all clients for an organization.
  responses:
    200:
      body:
        application/json:
          example: |
            {
              "org1-validator" : "https://chef.example/orgaizations/org1/clients/org1-validator",
              "client1" : "https://chef.example/orgaizations/org1/clients/client1"
            }

post:
  is: [ versioned ]
  body:
    application/json:
      example: !include examples/clients-post.json
      schema: !include schemas/clients-post.json
  description:
    Create a new client in an organization.
  responses:
    201:
      headers: !include common/location-header.yml
      body:
        application/json:
          example: |
            {
              "uri"=>"https://chef.example/orgaizations/org1/clients/client1",
              "chef_key" : {
                "name" : "default",
                "public_key" : "-----BEGIN PUBLIC KEY-----",
                "private_key" : "-----BEGIN RSA PRIVATE KEY-----"
            }
    409:
/{client}:
  description:
    Manage individual clients that exist in an organization.
  uriParameters:
    client:
      displayName: client
      description: Name of the client you wish to perform an action on.
      type: string
  get:
    is: [ versioned ]
    description: |
      Retrieve an individual Chef client that exists in an organization.
      No longer contains public key field. Use the keys API to retrieve a key.
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "name" : "user1",
                "validator" : "false"
              }
      404:
  put:
    is: [ versioned ]
    description: |
      Update an existing client.
      Unlike the users endpoint, you only need to include the fields you wish update in the body.
      You can no longer update the public key via this method. Use the keys API.
    body:
      application/json:
        example: !include examples/clients-put.json
        schema: !include schemas/clients-put.json
    responses:
      200:
        body:
          application/json:
            example: |
              {"uri" : "https://chef.example/orgaizations/org1/clients/client1"}
      404:
      409:
  delete:
    is: [ versioned ]
    description:
      Delete an existing client in an organization.
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "name" : "client1",
                "validator" : "false"
              }
      404:
  /keys: !include client-keys.yml
